#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
# This command will populate the location_type table with values from db/seeds/cb7_locationtypes.csv
# And then populate the pages table with values from db/seeds/cb7_pages.yaml

APP_PATH = File.expand_path('../../config/application',  __FILE__)
require File.expand_path('../../config/boot',  __FILE__)
require File.expand_path(File.join(File.dirname(__FILE__), '..', 'config', 'environment'))
require 'geo_ruby'

puts "Populating LocationTypes"
CSV.foreach( File.join(Rails.root,'db','seeds','cb7_locationtypes.csv'), headers: true ) do |r|
  loctype = LocationType.find_or_create_by_name(r['location_type'])
end

puts "#{LocationType.count} location types"

puts "Populating Pages"
data = YAML.load_file( File.join(Rails.root,'db','seeds','cb7_pages.yml'))
pages = data['pages']
pages.each do |slug,params|
  page = Page.find_or_initialize_by_slug(slug)
  params.each do |name,value|
    page.send(name + "=", value)
  end
  # I don't really care who, just need *some* admin
  #Admin.current_admin = Admin.first
  page.author_id = Admin.first.id
  if not page.save
    puts "Errors saving the page:"
    puts page.errors.full_messages
  end
end

puts "#{Page.count} pages"

puts "Populating Site Options"
data = YAML.load_file( File.join(Rails.root,'db','seeds','cb7_site_options.yml'))
options = data['site_options']
options.each do |name,value|
  option = SiteOption.find_or_initialize_by_option_name(name)
  option.send("option_value=", value)
  if not option.save
    puts "Errors saving the SiteOption:"
    puts option.errors.full_messages
  end
end
puts "#{SiteOption.count} site options"


## For unknown reasons this fails to work: the region is created with
## the correct SRID=4326, but FeaturePoints then can't be added
## because of some sort of SRID error:
## Started POST "/locations" for ::ffff:24.186.92.142 at 2012-03-07 05:18:37 +0000
##  Processing by FeaturePointsController#create as */*
##  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"Ms6Tjz4Ek9lf6D5uyYM6dSkJnyOzudqJGRgPwK11twY=", "feature_point"=>{"name"=>"I bumped my shin on this bollard", "feature_location_type_attributes"=>{"location_type_id"=>"4"}, "description"=>"it's hard to get around"}, "latitude"=>"40.78600057329813", "longitude"=>"-73.98064613342285"}
## Completed 500 Internal Server Error in 63ms
##
##ActiveRecord::StatementInvalid (PGError: ERROR:  new row for relation "feature_points" violates check constraint "enforce_srid_the_geom"
## : INSERT INTO "feature_points" ("created_at", "description", "name", "submitter_name", "the_geom", "updated_at", "user_id", "visible") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"):
##  app/controllers/feature_points_controller.rb:27:in `create'

# puts "Populating CB7 region"
# have_cb7 = false
# Region.all.each do |r|
#   begin
#     # Bummer this isn't easy to just search for since it's in a
#     # serialized field.
#     if r.name == 107
#       have_cb7 = true
#       break
#     end
#   rescue Exception => e
#   end
# end
# if not have_cb7
#   data = File.open(File.join(Rails.root,'db','seeds','cb7.wkt')).read
#   # Creating a Shapefile that doesn't actually have an attached file;
#   # we just need its metadata.
#   shapefile = Shapefile.new
#   shapefile.kind = 'Community Board'
#   shapefile.name_field = 'BoroCD'
#   shapefile.default = true
#   shapefile.save(:validate => false)
#   region = Region.new
#   region.shapefile = shapefile
#   # APparently you use from_ewkt() even if you have vanilla WKT.
#   region.the_geom = MultiPolygon.from_ewkt(data)
#   region.metadata = {shapefile.name_field => 107}
#   region.save
# end
# puts "#{Region.count} regions"
